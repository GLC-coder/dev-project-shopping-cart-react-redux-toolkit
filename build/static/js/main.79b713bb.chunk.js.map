{"version":3,"sources":["components/Cart/CartItem.module.css","components/Shop/ProductItem.module.css","components/UI/Notification.module.css","components/Cart/CartButton.module.css","components/UI/Card.module.css","components/Cart/Cart.module.css","components/Layout/MainHeader.module.css","components/Shop/Products.module.css","store/cartUi-slice.js","store/cart-slice.js","store/index.js","constant/index.js","components/UI/Card.js","components/Cart/CartItem.js","components/Cart/Cart.js","components/Cart/CartButton.js","components/Layout/MainHeader.js","components/Layout/Layout.js","components/Shop/ProductItem.js","components/Shop/Products.js","components/UI/Notification.js","App.js","store/cart-create-actions.js","index.js"],"names":["module","exports","cartUiSlice","createSlice","name","initialState","cartIsVisible","notification","reducers","toggle","state","showNotification","action","status","payload","title","message","cartUiActions","actions","cartSlice","items","totalQuantity","isChecked","replaceCartItems","addItemToCart","newItem","existingItem","find","item","id","quantity","totalPrice","price","push","removeItemFromCart","updatedItemId","updatedItem","filter","console","log","cartActions","configureStore","reducer","cartUi","cart","CART_DATA_LINK","Card","props","className","classes","card","children","CartItem","dispatch","useDispatch","total","toFixed","itemprice","details","onClick","Cart","cartItems","useSelector","cartItemsList","map","CartButton","button","type","badge","MainHeader","header","Layout","ProductItem","description","DUMMY_PRODUCTS","Products","productsList","products","Notification","specialClasses","error","success","cssClasses","isInitial","App","useEffect","fetch","respone","ok","Error","json","cartData","method","body","JSON","stringify","sendCartData","Fragment","ReactDOM","createRoot","document","getElementById","render","store"],"mappings":"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","file":"static/js/main.79b713bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CartItem_item__1zMOi\",\"details\":\"CartItem_details__2_Z3n\",\"quantity\":\"CartItem_quantity__DfEXm\",\"price\":\"CartItem_price__2Nl0j\",\"itemprice\":\"CartItem_itemprice__j9ZSt\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ProductItem_item__WYS0J\",\"price\":\"ProductItem_price__1GiPR\",\"actions\":\"ProductItem_actions__14Yr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"CartButton_button__3nU_b\",\"badge\":\"CartButton_badge__3njqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart\":\"Cart_cart__3GqLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__k5Wsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"Products_products__1PCvW\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst carUiState = {\n  cartIsVisible: false,\n  notification: null,\n};\n\nconst cartUiSlice = createSlice({\n  name: \"cartui\",\n  initialState: carUiState,\n  reducers: {\n    toggle: (state) => {\n      state.cartIsVisible = !state.cartIsVisible;\n    },\n    showNotification: (state, action) => {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const cartUiActions = cartUiSlice.actions;\nexport default cartUiSlice;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  isChecked: false,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    replaceCartItems: (state, action) => {\n      state.items = action.payload.items;\n      state.totalQuantity = action.payload.totalQuantity;\n    },\n    addItemToCart: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      state.isChecked = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          title: newItem.title,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + existingItem.price;\n      }\n    },\n    removeItemFromCart: (state, action) => {\n      state.isChecked = true;\n      state.totalQuantity--;\n      const updatedItemId = action.payload;\n      const updatedItem = state.items.find((item) => item.id === updatedItemId);\n      if (updatedItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== updatedItemId);\n        console.log(state.items)\n      } else {\n        updatedItem.quantity--;\n        updatedItem.totalPrice = updatedItem.totalPrice - updatedItem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n","import { configureStore } from '@reduxjs/toolkit';\nimport cartUiSlice from './cartUi-slice';\nimport cartSlice from './cart-slice';\n\nconst state = configureStore({\n    reducer: {cartUi: cartUiSlice.reducer, cart: cartSlice.reducer}\n})\n\nexport default state;","const CART_DATA_LINK = \"https://shopping-cart-85e6d-default-rtdb.firebaseio.com/cart.json\";\n\nexport default CART_DATA_LINK;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <section\n      className={`${classes.card} ${props.className ? props.className : ''}`}\n    >\n      {props.children}\n    </section>\n  );\n};\n\nexport default Card;\n","import { useDispatch } from 'react-redux';\nimport { cartActions } from '../../store/cart-slice';\nimport classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch()\n  const { id, title, quantity, total, price } = props.item;\n\n  const onRomoveItemFromCartHandler = ()=>{\n    dispatch(cartActions.removeItemFromCart(id))\n  }\n  \n  const onIncreaseItemToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({\n      id, \n      title,\n      price,\n    }))\n  }\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}{' '}\n          <span className={classes.itemprice}>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={onRomoveItemFromCartHandler}>-</button>\n          <button onClick={onIncreaseItemToCartHandler}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Card from \"../UI/Card\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\n\nconst Cart = (props) => {\n  const cartItems = useSelector((state) => state.cart.items);\n  const cartItemsList = (\n    <ul>\n      {cartItems.map((item) => (\n        <CartItem\n          key={item.id}\n          item={{\n            id: item.id,\n            title: item.title,\n            quantity: item.quantity,\n            total: item.totalPrice,\n            price: item.price,\n          }}\n        />\n      ))}\n    </ul>\n  );\n  return (\n    <Card className={classes.cart}>\n      <h2>Your Shopping Cart</h2>\n      {cartItemsList}\n    </Card>\n  );\n};\n\nexport default Cart;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { cartUiActions } from '../../store/cartUi-slice';\nimport classes from './CartButton.module.css';\n\nconst CartButton = (props) => {\n  const dispatch = useDispatch();\n \n  const totalQuantity = useSelector(state => state.cart.totalQuantity)\n\n\n\n  const onToggleCartBtnHandler = ()=>{\n    dispatch(cartUiActions.toggle())\n  }\n  return (\n    <button className={classes.button} type=\"button\" onClick={onToggleCartBtnHandler}>\n      <span>My Cart</span>\n      <span className={classes.badge}>{totalQuantity}</span>\n    </button>\n  );\n};\n\nexport default CartButton;\n","import CartButton from '../Cart/CartButton';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes.header}>\n      <h1>Shopping Cart</h1>\n      <nav>\n        <ul>\n          <li>\n            <CartButton />\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import { Fragment } from 'react';\nimport MainHeader from './MainHeader';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useDispatch } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\n\n\nconst ProductItem = (props) => {\n  const dispatch = useDispatch();\n  const { id, title, price, description } = props;\n\n  const onAddtoCartHandler = () => {\n    dispatch(\n      cartActions.addItemToCart({\n        id,\n        title,\n        price,\n      })\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button type=\"button\" onClick={onAddtoCartHandler}>\n            Add to Cart\n          </button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n","import ProductItem from \"./ProductItem\";\nimport classes from \"./Products.module.css\";\n\nconst DUMMY_PRODUCTS = [\n  { id: \"p1\", title: \"Book1\", price: 6, description: \"This is my first book\" },\n  {\n    id: \"p2\",\n    title: \"Book2\",\n    price: 10,\n    description: \"This is my second book\",\n  },\n  {\n    id: \"p3\",\n    title: \"Book3\",\n    price: 16,\n    description: \"This is my fourth book\",\n  },\n  { id: \"p4\", title: \"Book4\", price: 8, description: \"This is my fifth book\" },\n];\n\nconst Products = (props) => {\n  const productsList = (\n    <ul>\n      {DUMMY_PRODUCTS.map((item) => (\n        <ProductItem\n          key={item.id}\n          id={item.id}\n          title={item.title}\n          price={item.price}\n          description={item.description}\n        />\n      ))}\n    </ul>\n  );\n  return (\n    <section className={classes.products}>\n      <h2>Buy your favorite products</h2>\n      {productsList}\n    </section>\n  );\n};\n\nexport default Products;\n","import classes from './Notification.module.css';\n\nconst Notification = (props) => {\n  let specialClasses = '';\n\n  if (props.status === 'error') {\n    specialClasses = classes.error;\n  }\n  if (props.status === 'success') {\n    specialClasses = classes.success;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <section className={cssClasses}>\n      <h2>{props.title}</h2>\n      <p>{props.message}</p>\n    </section>\n  );\n};\n\nexport default Notification;","import { useSelector, useDispatch } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { sendCartData, fetchCartData } from \"./store/cart-create-actions\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\n\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const cartIsVisible = useSelector((state) => state.cartUi.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.cartUi.notification);\n  \n  useEffect(()=>{\n    dispatch(fetchCartData())\n    console.log(\"first\")\n  },[dispatch])\n\n\n  useEffect(() => {\n\n    if(isInitial) {\n      isInitial = false;\n      return;\n    }\n    if(cart.isChecked) {\n      dispatch(sendCartData(cart))\n   \n    }\n    \n  }, [cart, dispatch]);\n\n  \n  return (\n    <React.Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { cartUiActions } from \"./cartUi-slice\";\nimport { cartActions } from \"./cart-slice\";\nimport CART_DATA_LINK from \"../constant\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    dispatch(\n      cartUiActions.showNotification({\n        status: \"fetching\",\n        title: \"Fetching\",\n        message: \"Fetching ...\",\n      })\n    );\n    try {\n      const respone = await fetch(CART_DATA_LINK);\n      if (!respone.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const cartData = await respone.json();\n      dispatch(\n        cartUiActions.showNotification({\n          status: \"success\",\n          title: \"success\",\n          message: \"Fetch cart data successfully!\",\n        })\n      );\n      console.log(cartData)\n      dispatch(cartActions.replaceCartItems({\n        items: cartData.items || [],\n        totalQuantity : cartData.totalQuantity\n      }))\n      \n    } catch (error) {\n      dispatch(\n        cartUiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Fetch cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      cartUiActions.showNotification({\n        status: \"pending\",\n        title: \"Pending\",\n        message: \"Pending ...\",\n      })\n    );\n    try {\n      const response = await fetch(CART_DATA_LINK, {\n        method: \"PUT\",\n        body: JSON.stringify(cart),\n      });\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      dispatch(\n        cartUiActions.showNotification({\n          status: \"success\",\n          title: \"success\",\n          message: \"Send cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        cartUiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Send cart data failed!\",\n        })\n      );\n    }\n  };\n};\n","import ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}